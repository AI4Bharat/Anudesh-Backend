name: Deploy Latest container to Cluster from Azure Container Registry

on:
  push:
  workflow_call:
  workflow_dispatch:
  pull_request:
    branches: [k8s]

# Environment variables available to all jobs and steps in this workflow
env:
  CLUSTER_NAME: shoonya-aks
  CLUSTER_RESOURCE_GROUP: shoonya
  NAMESPACE: shoonya
  SECRET: shoonya-prod-secrets
  
jobs:
  build-stage:
    uses: ./.github/workflows/build.yaml
    secrets:
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
  release-stage:
    needs: [build-stage]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
    
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o json | kubectl apply -f -
      working-directory: ./backend/
  
    # Update Secrets file in k8s cluster
    - name: Update deployment secrets
      run: |
        cat << EOF >> backend/.env.prod
        DEBUG=${{ secrets.DEBUG }}
        DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
        DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
        DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
        DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
        ENV_ALLOWED_HOST=${{ secrets.ENV_ALLOWED_HOST }}
        POSTGRES_DB=${{ secrets.POSTGRES_DB }}
        POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_USER=${{ secrets.POSTGRES_USER }}
        POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
        POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
        AZURE_STORAGE_KEY=${{ secrets.AZURE_STORAGE_KEY }}
        AZURE_ACCOUNT_NAME=${{ secrets.AZURE_ACCOUNT_NAME }}
        AZURE_MEDIA_CONTAINER=${{ secrets.AZURE_MEDIA_CONTAINER }}
        AZURE_STATIC_CONTAINER=${{ secrets.AZURE_STATIC_CONTAINER }}
        REDIS_HOST=${{ secrets.REDIS_HOST }}
        REDIS_PORT=${{ secrets.REDIS_PORT }}
        SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
        EMAIL_BACKEND=${{ secrets.EMAIL_BACKEND }}
        EMAIL_HOST=${{ secrets.EMAIL_HOST }}
        EMAIL_PORT=${{ secrets.EMAIL_PORT }}
        DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}
        EOF
        kubectl delete secret ${{ env.SECRET }} --namespace ${{ env.NAMESPACE }}
        kubectl create secret generic ${{ env.SECRET }} --namespace ${{ env.NAMESPACE }} --from-env-file=backend/.env.prod

    # Rename container name with Github SHA
    - name: Rename Github SHA
      run: |
        export BUILD_TAG=${{ github.sha }}
        sed -i "s/VERSION/${BUILD_TAG}/g" ./k8s/django-rest-api/rest-api.yaml

    # Deploy app to AKS
    - uses: azure/k8s-deploy@v1
      with:
        manifests: |
          ${{ github.workspace }}/k8s/django-rest-api/rest-api.yaml
          ${{ github.workspace }}/k8s/ingress/cert-manager.yaml
          ${{ github.workspace }}/k8s/ingress/ingress.yaml
        imagepullsecrets: |
          ${{ env.SECRET }}
        namespace: ${{ env.NAMESPACE }}